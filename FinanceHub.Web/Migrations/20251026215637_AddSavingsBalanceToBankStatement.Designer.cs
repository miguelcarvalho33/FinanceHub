// <auto-generated />
using System;
using FinanceHub.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FinanceHub.Web.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20251026215637_AddSavingsBalanceToBankStatement")]
    partial class AddSavingsBalanceToBankStatement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("FinanceHub.Core.Models.BankStatement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("EmissionDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("FinalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IBAN")
                        .IsRequired()
                        .HasMaxLength(34)
                        .HasColumnType("TEXT");

                    b.Property<string>("NIB")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("TEXT");

                    b.Property<string>("Period")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("PreviousBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SWIFT")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("SavingsBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("StatementNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BankStatements");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BankStatementId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CardName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("CreditUsed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<string>("Holder")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("MaskedNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BankStatementId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.DescriptionRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CleanDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TextToFind")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("DescriptionRules");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.DirectDebit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AuthorizationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("BankStatementId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditorName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("EntityNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("LimitValueRaw")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BankStatementId");

                    b.ToTable("DirectDebits");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("BankStatementId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("ContractDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("ContractedValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("IndexRate")
                        .HasColumnType("decimal(5,3)");

                    b.Property<string>("LoanType")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("NextCapitalPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("NextInterestPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("NextPaymentDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("OutstandingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Spread")
                        .HasColumnType("decimal(5,3)");

                    b.Property<decimal?>("TANL")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BankStatementId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.LoanPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("CapitalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstallmentNumber")
                        .HasColumnType("INTEGER");

                    b.Property<decimal?>("InterestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LoanId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("SourceLine")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ValueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanPayments");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.MbwayRule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ContactName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumberSuffix")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("MbwayRules");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasColumnType("TEXT");

                    b.Property<string>("Bank")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("BankStatementId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CleanDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("MovementDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ValueDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BankStatementId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Card", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.BankStatement", "BankStatement")
                        .WithMany("Cards")
                        .HasForeignKey("BankStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankStatement");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.DescriptionRule", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.Category", "Category")
                        .WithMany("DescriptionRules")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.DirectDebit", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.BankStatement", "BankStatement")
                        .WithMany("DirectDebits")
                        .HasForeignKey("BankStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankStatement");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Loan", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.BankStatement", "BankStatement")
                        .WithMany("Loans")
                        .HasForeignKey("BankStatementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BankStatement");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.LoanPayment", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.Loan", "Loan")
                        .WithMany("Payments")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.MbwayRule", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.Category", "Category")
                        .WithMany("MbwayRules")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Transaction", b =>
                {
                    b.HasOne("FinanceHub.Core.Models.BankStatement", "BankStatement")
                        .WithMany("Transactions")
                        .HasForeignKey("BankStatementId");

                    b.HasOne("FinanceHub.Core.Models.Category", "Category")
                        .WithMany("Transactions")
                        .HasForeignKey("CategoryId");

                    b.Navigation("BankStatement");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.BankStatement", b =>
                {
                    b.Navigation("Cards");

                    b.Navigation("DirectDebits");

                    b.Navigation("Loans");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Category", b =>
                {
                    b.Navigation("DescriptionRules");

                    b.Navigation("MbwayRules");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("FinanceHub.Core.Models.Loan", b =>
                {
                    b.Navigation("Payments");
                });
#pragma warning restore 612, 618
        }
    }
}
